name: build-package
on:
  push:
    paths-ignore:
      - '.gitignore'
      - 'ADOPTERS*'
      - 'LICENSE'
      - 'README*'
      - 'CHANGELOG*'
      - 'ROADMAP*'
      - 'SECURITY*'
      - 'GOVERNANCE*'
  pull_request:
    paths-ignore:
      - '.github/**'
      - '.gitignore'
      - 'ADOPTERS*'
      - 'LICENSE'
      - 'README*'
      - 'CHANGELOG*'
      - 'ROADMAP*'
      - 'SECURITY*'
      - 'GOVERNANCE*'
permissions: read-all
jobs:
  build-package:
    runs-on: ubuntu-latest
    environment: Build
    steps:
      # Checkout repository content
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set environment for branch
        run: |
          set -x
          if [[ $GITHUB_REF == 'refs/heads/master' ]]; then
            echo "IMAGE_TAG=nightly" >> "$GITHUB_ENV"
            echo "PACKAGE_IMAGE=true" >> "$GITHUB_ENV"
          elif [[ $GITHUB_REF == "refs/tags/$GITHUB_REF_NAME" ]]; then
            echo "IMAGE_TAG=$GITHUB_REF_NAME" >> "$GITHUB_ENV"
            echo "PACKAGE_IMAGE=true" >> "$GITHUB_ENV"
          else
            echo "PACKAGE_IMAGE=false" >> "$GITHUB_ENV"
          fi

      - name: Set up QEMU
        if: github.repository_owner == 'microcks' && env.PACKAGE_IMAGE == 'true'
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        if: github.repository_owner == 'microcks' && env.PACKAGE_IMAGE == 'true'
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Quay.io Registry and setup multi-arch builder
        if: github.repository_owner == 'microcks' && env.PACKAGE_IMAGE == 'true'
        run: |
          echo ${{ secrets.QUAY_PASSWORD }} | docker login -u ${{ secrets.QUAY_USERNAME }} --password-stdin quay.io
          BUILDER=buildx-multi-arch
          docker buildx inspect $BUILDER || docker buildx create --name=$BUILDER --driver=docker-container --driver-opt=network=host

      - name: Build and push container image
        if: github.repository_owner == 'microcks' && env.PACKAGE_IMAGE == 'true'
        run: |
          docker buildx build --push \
            --platform=linux/amd64,linux/arm64 \
            --builder=buildx-multi-arch \
            --provenance=false \
            --build-arg TAG=$IMAGE_TAG \
            --file Dockerfile.ubi-minimal \
            --tag=quay.io/microcks/microcks-postman-runtime:$IMAGE_TAG .